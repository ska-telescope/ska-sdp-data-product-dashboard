default:
  image: node:20.11.1

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  CI_POETRY_VERSION: 1.8.2

include:
  - template: Code-Quality.gitlab-ci.yml
  - project: 'ska-telescope/templates-repository'
    file:
      - 'gitlab-ci/includes/docs.gitlab-ci.yml'
      - 'gitlab-ci/includes/oci-image.gitlab-ci.yml'
      - 'gitlab-ci/includes/release.gitlab-ci.yml'
      - 'gitlab-ci/includes/finaliser.gitlab-ci.yml'
      - 'gitlab-ci/includes/helm-chart.gitlab-ci.yml'
      - 'gitlab-ci/includes/deploy.gitlab-ci.yml'

stages:
  - dependencies
  - lint
  - test
  - build
  - scan
  - pages
  - publish
  - deploy
  - deploy-dp
  - integration
  - integration-dp
  - staging
  - staging-dp
  - integration-psi-low

########################## JOB SPECIFIC STUFF BELOW HERE #################################

#Install basic dependencies using yarn
install_dependencies:
  stage: dependencies
  tags:
    - ${SKA_DEFAULT_RUNNER}
  before_script:
    - rm -rf node_modules
  script:
    - npm config set registry https://registry.npmjs.org/
    - yarn install --immutable
  cache:
    paths:
      - node_modules/
    policy: push

#Run the static code analysis
code_analysis:
  stage: lint
  tags:
    - ${SKA_DEFAULT_RUNNER}
  dependencies:
    - install_dependencies
  cache:
    paths:
      - node_modules/
    policy: pull
  before_script:
    - mkdir -p build/reports
  script:
    - yarn prettier
    - yarn lint
    - yarn code-analysis
    - mv linting.xml build/reports/linting.xml
  artifacts:
    paths:
      - build/

# run the cypress test coverage reports
test_and_coverage:
  image: cypress/browsers:node-20.11.1-chrome-123.0.6312.58-1-ff-124.0-edge-122.0.2365.92-1
  stage: test
  tags:
    - ${SKA_DEFAULT_RUNNER}
  dependencies:
    - install_dependencies
  cache:
    paths:
      - node_modules/
    policy: pull
  before_script:
    - mkdir -p build/reports
    - yarn cypress install
  script:
    - yarn test:cypress:component:ci
    - yarn start &
    - npx wait-on http://localhost:8100/ --timeout 120000
    - yarn test:cypress:e2e:ci
    - yarn test:coverage:report:ci
    - cp build/reports/cobertura-coverage.xml build/reports/code-coverage.xml
  artifacts:
    paths:
      - build/

# Build the application
build:
  stage: build
  tags:
    - ${SKA_DEFAULT_RUNNER}
  dependencies:
    - install_dependencies
  cache:
    paths:
      - node_modules/
    policy: pull
  script:
    - yarn build

# list the current top level dependencies for the project
list_dependencies:
  stage: test
  tags:
    - ${SKA_DEFAULT_RUNNER}
  dependencies:
    - install_dependencies
  allow_failure: true
  cache:
    paths:
      - node_modules/
    policy: pull
  before_script:
    - mkdir -p build/tests
    - yarn cypress install
  script:
    - yarn list --depth=0 --json >> npm_deps.json
    - yarn list --depth=0  >> npm_deps.txt
    - mkdir .public
    - cp npm_deps.txt .public/
    - cp npm_deps.json .public/
  artifacts:
    paths:
      - .public

# export the report
pages:
  stage: pages
  tags:
    - ${SKA_DEFAULT_RUNNER}
  dependencies:
    - test_and_coverage
    - list_dependencies
    - code_quality
  script:
    - mv public/* .
    - cp -r build/* public
    - cp -r .public/* public
  artifacts:
    paths:
      - public
    expire_in: 30 days

# Deploy the application

.info_script: &info_script
  - |-
    echo "Status of pods in $KUBE_NAMESPACE namespace:"
    kubectl get pods -n $KUBE_NAMESPACE -o jsonpath="{range .items[*]}{'Pod: '}{.metadata.name}:{'\n'}{'\t'}{'Image: '}{.spec.containers[*].image}{'\n'}{'\t'}{'Status: '}{.status.phase}{'\n'}{end}{'\n'}"
    echo "Addresses to connect to the deployment of the Dataproduct Dashboard: "
    echo "  https://sdhp.stfc.skao.int/$KUBE_NAMESPACE/dashboard/"
    echo "Backend API:"
    echo "  https://sdhp.stfc.skao.int/$KUBE_NAMESPACE/api/"

deploy-dev-environment-dp:
  stage: deploy-dp
  extends: deploy-dev-environment
  when: manual
  tags:
    - ska-k8srunner-dp
  variables:
    K8S_CHART_PARAMS: --values resources/values/dev-environment-dp-values.yaml

test-dev-environment-dp:
  stage: deploy-dp
  extends: test-dev-environment
  when: manual
  tags:
    - ska-k8srunner-dp
  needs:
    - deploy-dev-environment-dp

info-dev-environment-dp:
  stage: deploy-dp
  extends: info-dev-environment
  tags:
    - ska-k8srunner-dp
  script:
    - *info_script

stop-dev-environment-dp:
  stage: deploy-dp
  extends: stop-dev-environment
  tags:
    - ska-k8srunner-dp

deploy-integration-dp:
  stage: integration-dp
  extends: deploy-integration
  when: manual
  tags:
    - ska-k8srunner-dp
  variables:
    K8S_CHART_PARAMS: --values resources/values/integration-dp-values.yaml

info-integration-dp:
  stage: integration-dp
  extends: info-integration
  tags:
    - ska-k8srunner-dp
  script:
    - *info_script

redeploy-integration-dp:
  stage: integration-dp
  extends: redeploy-integration
  tags:
    - ska-k8srunner-dp
  variables:
    K8S_CHART_PARAMS: --values resources/values/integration-dp-values.yaml

stop-integration-dp:
  stage: integration-dp
  extends: stop-integration
  tags:
    - ska-k8srunner-dp
  needs:
    - deploy-integration-dp

deploy-staging-dp:
  stage: staging-dp
  extends: deploy-staging
  when: manual
  tags:
    - ska-k8srunner-dp
  variables:
    K8S_CHART_PARAMS: --values resources/values/staging-dp-values.yaml

info-staging-dp:
  stage: staging-dp
  extends: info-staging
  tags:
    - ska-k8srunner-dp
  script:
    - *info_script

redeploy-staging-dp:
  stage: staging-dp
  extends: redeploy-staging
  tags:
    - ska-k8srunner-dp
  variables:
    K8S_CHART_PARAMS: --values resources/values/staging-dp-values.yaml

stop-staging-dp:
  stage: staging-dp
  extends: stop-staging
  tags:
    - ska-k8srunner-dp
  needs:
    - deploy-staging-dp

# psi-low
deploy-integration-psi-low:
  stage: integration-psi-low
  extends: deploy-integration
  when: manual
  tags:
    - k8srunner-psi-low

info-integration-psi-low:
  stage: integration-psi-low
  extends: info-integration
  tags:
    - k8srunner-psi-low
  script:
    - *info_script

redeploy-integration-psi-low:
  stage: integration-psi-low
  extends: redeploy-integration
  tags:
    - k8srunner-psi-low

stop-integration-psi-low:
  stage: integration-psi-low
  extends: stop-integration
  tags:
    - k8srunner-psi-low
  needs:
    - deploy-integration-psi-low
